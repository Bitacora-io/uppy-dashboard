{"version":3,"sources":["index.js"],"names":["require","h","UIPlugin","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","getTextDirection","nanoid","trapFocus","createSuperFocus","memoize","FOCUSABLE_ELEMENTS","DashboardUI","locale","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultPickerIcon","module","exports","uppy","opts","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","target","id","setPluginState","addTarget","callerPluginId","constructor","name","callerPluginName","title","callerPluginType","type","msg","log","state","slice","push","el","hideAllPanels","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","showPanel","canEditFile","file","editors","some","getPlugin","openFileEditor","forEach","editor","selectFile","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","disablePageScrollWhenModalOpen","body","classList","add","animateOpenClose","isClosing","handler","isHidden","removeEventListener","addEventListener","browserBackButtonClose","updateBrowserHistory","handleKeyDownInModal","emit","closeModal","manualClose","remove","superFocus","cancel","focus","history","modalName","back","isModalOpen","requestCloseModal","onRequestCloseModal","setDarkModeCapability","isDarkModeOn","getState","capabilities","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","contentRect","width","height","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","inline","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","ifFocusedOnUppyRecently","disableAllFocusableElements","disable","focusableNodes","querySelectorAll","node","currentTabIndex","getAttribute","dataset","inertTabindex","setAttribute","removeAttribute","dashboardIsDisabled","pushState","handlePopState","keyCode","forModal","handleClickOutside","closeModalOnClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","length","handleInputChange","preventDefault","handleDragOver","stopPropagation","canSomePluginHandleRootDrop","somePluginCanHandleRootDrop","canHandleRootDrop","doesEventHaveFiles","types","dataTransfer","hasFiles","disabled","disableLocalFiles","allowNewUpload","dropEffect","removeDragOverClassTimeout","isDraggingOver","onDragOver","handleDragLeave","onDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","onDrop","handleRequestThumbnail","waitForThumbnailsBeforeUpload","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","failed","closeAfterFinish","handleCancelRestore","firstFile","initEvents","trigger","showModalTrigger","on","autoOpenFileEditor","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","getObjectOfFilesPerState","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllErrored","isAllPaused","acquirers","progressindicators","theme","indexOf","fileManagerSelectionType","console","warn","totalFileCount","Object","keys","totalProgress","direction","autoProceed","i18n","i18nArray","note","recoveredState","metaFields","resumableUploads","individualCancellation","isMobileDevice","showLinkToFileUploadResult","proudlyDisplayPoweredByUppy","hideCancelButton","hideRetryButton","hidePauseResumeButton","showRemoveButtonAfterComplete","isTargetDOMEl","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","showSelectedFiles","discoverProviderPlugins","install","Error","allowMultipleUploads","allowMultipleUploadBatches","mount","plugins","pluginID","disableStatusBar","use","hideUploadButton","showProgressDetails","hideAfterFinish","hideProgressAfterFinish","doneButtonHandler","disableInformer","disableThumbnailGenerator","thumbnailWidth","thumbnailType","lazy","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","removeListener","defaultLocale","defaultOptions","reset","i18nInit","onMount","element","dir","VERSION"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst { UIPlugin } = require('@uppy/core')\nconst StatusBar = require('@uppy/status-bar')\nconst Informer = require('@uppy/informer')\nconst ThumbnailGenerator = require('@uppy/thumbnail-generator')\nconst findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements')\nconst toArray = require('@uppy/utils/lib/toArray')\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles')\nconst getTextDirection = require('@uppy/utils/lib/getTextDirection')\nconst { nanoid } = require('nanoid/non-secure')\nconst trapFocus = require('./utils/trapFocus')\nconst createSuperFocus = require('./utils/createSuperFocus')\nconst memoize = require('memoize-one').default || require('memoize-one')\nconst FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS')\nconst DashboardUI = require('./components/Dashboard')\n\nconst locale = require('./locale')\n\nconst TAB_KEY = 9\nconst ESC_KEY = 27\n\nfunction createPromise () {\n  const o = {}\n  o.promise = new Promise((resolve, reject) => {\n    o.resolve = resolve\n    o.reject = reject\n  })\n  return o\n}\n\nfunction defaultPickerIcon () {\n  return (\n    <svg aria-hidden=\"true\" focusable=\"false\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\">\n      <path d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\" />\n    </svg>\n  )\n}\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends UIPlugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n    this.modalName = `uppy-Dashboard-${nanoid()}`\n\n    this.defaultLocale = locale\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: null,\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      thumbnailType: 'image/jpeg',\n      waitForThumbnailsBeforeUpload: false,\n      defaultPickerIcon,\n      showLinkToFileUploadResult: false,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideCancelButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideProgressAfterFinish: false,\n      doneButtonHandler: () => {\n        this.uppy.reset()\n        this.requestCloseModal()\n      },\n      note: null,\n      closeModalOnClickOutside: false,\n      closeAfterFinish: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      animateOpenClose: true,\n      fileManagerSelectionType: 'files',\n      proudlyDisplayPoweredByUppy: true,\n      onRequestCloseModal: () => this.closeModal(),\n      showSelectedFiles: true,\n      showRemoveButtonAfterComplete: false,\n      browserBackButtonClose: false,\n      theme: 'light',\n      autoOpenFileEditor: false,\n      disabled: false,\n      disableLocalFiles: false,\n    }\n\n    // merge default options with the ones set by user\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.superFocus = createSuperFocus()\n    this.ifFocusedOnUppyRecently = false\n\n    // Timeouts\n    this.makeDashboardInsidesVisibleAnywayTimeout = null\n    this.removeDragOverClassTimeout = null\n  }\n\n  removeTarget = (plugin) => {\n    const pluginState = this.getPluginState()\n    // filter out the one we want to remove\n    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n  }\n\n  addTarget = (plugin) => {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer'\n        && callerPluginType !== 'progressindicator'\n        && callerPluginType !== 'editor') {\n      const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'\n      this.uppy.log(msg, 'error')\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType,\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets,\n    })\n\n    return this.el\n  }\n\n  hideAllPanels = () => {\n    const state = this.getPluginState()\n    const update = {\n      activePickerPanel: false,\n      showAddFilesPanel: false,\n      activeOverlayType: null,\n      fileCardFor: null,\n      showFileEditor: false,\n    }\n\n    if (state.activePickerPanel === update.activePickerPanel\n        && state.showAddFilesPanel === update.showAddFilesPanel\n        && state.showFileEditor === update.showFileEditor\n        && state.activeOverlayType === update.activeOverlayType) {\n      // avoid doing a state update if nothing changed\n      return\n    }\n\n    this.setPluginState(update)\n  }\n\n  showPanel = (id) => {\n    const { targets } = this.getPluginState()\n\n    const activePickerPanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePickerPanel,\n      activeOverlayType: 'PickerPanel',\n    })\n  }\n\n  canEditFile = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    return editors.some((target) => (\n      this.uppy.getPlugin(target.id).canEditFile(file)\n    ))\n  }\n\n  openFileEditor = (file) => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    this.setPluginState({\n      showFileEditor: true,\n      fileCardFor: file.id || null,\n      activeOverlayType: 'FileEditor',\n    })\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).selectFile(file)\n    })\n  }\n\n  saveFileEditor = () => {\n    const { targets } = this.getPluginState()\n    const editors = this.#getEditors(targets)\n\n    editors.forEach((editor) => {\n      this.uppy.getPlugin(editor.id).save()\n    })\n\n    this.hideAllPanels()\n  }\n\n  openModal = () => {\n    const { promise, resolve } = createPromise()\n    // save scroll position\n    this.savedScrollPosition = window.pageYOffset\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\n      const handler = () => {\n        this.setPluginState({\n          isHidden: false,\n        })\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: false,\n      })\n      resolve()\n    }\n\n    if (this.opts.browserBackButtonClose) {\n      this.updateBrowserHistory()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.addEventListener('keydown', this.handleKeyDownInModal)\n\n    this.uppy.emit('dashboard:modal-open')\n\n    return promise\n  }\n\n  closeModal = (opts = {}) => {\n    const {\n      // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\n      manualClose = true,\n    } = opts\n\n    const { isHidden, isClosing } = this.getPluginState()\n    if (isHidden || isClosing) {\n      // short-circuit if animation is ongoing\n      return\n    }\n\n    const { promise, resolve } = createPromise()\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isFixed')\n    }\n\n    if (this.opts.animateOpenClose) {\n      this.setPluginState({\n        isClosing: true,\n      })\n      const handler = () => {\n        this.setPluginState({\n          isHidden: true,\n          isClosing: false,\n        })\n\n        this.superFocus.cancel()\n        this.savedActiveElement.focus()\n\n        this.el.removeEventListener('animationend', handler, false)\n        resolve()\n      }\n      this.el.addEventListener('animationend', handler, false)\n    } else {\n      this.setPluginState({\n        isHidden: true,\n      })\n\n      this.superFocus.cancel()\n      this.savedActiveElement.focus()\n\n      resolve()\n    }\n\n    // handle ESC and TAB keys in modal dialog\n    document.removeEventListener('keydown', this.handleKeyDownInModal)\n\n    if (manualClose) {\n      if (this.opts.browserBackButtonClose) {\n        // Make sure that the latest entry in the history state is our modal name\n        // eslint-disable-next-line no-restricted-globals\n        if (history.state?.[this.modalName]) {\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\n          // eslint-disable-next-line no-restricted-globals\n          history.back()\n        }\n      }\n    }\n\n    this.uppy.emit('dashboard:modal-closed')\n\n    return promise\n  }\n\n  isModalOpen = () => {\n    return !this.getPluginState().isHidden || false\n  }\n\n  requestCloseModal = () => {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    }\n    return this.closeModal()\n  }\n\n  setDarkModeCapability = (isDarkModeOn) => {\n    const { capabilities } = this.uppy.getState()\n    this.uppy.setState({\n      capabilities: {\n        ...capabilities,\n        darkMode: isDarkModeOn,\n      },\n    })\n  }\n\n  handleSystemDarkModeChange = (event) => {\n    const isDarkModeOnNow = event.matches\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnNow)\n  }\n\n  toggleFileCard = (show, fileID) => {\n    const file = this.uppy.getFile(fileID)\n    if (show) {\n      this.uppy.emit('dashboard:file-edit-start', file)\n    } else {\n      this.uppy.emit('dashboard:file-edit-complete', file)\n    }\n\n    this.setPluginState({\n      fileCardFor: show ? fileID : null,\n      activeOverlayType: show ? 'FileCard' : null,\n    })\n  }\n\n  toggleAddFilesPanel = (show) => {\n    this.setPluginState({\n      showAddFilesPanel: show,\n      activeOverlayType: show ? 'AddFiles' : null,\n    })\n  }\n\n  addFiles = (files) => {\n    const descriptors = files.map((file) => ({\n      source: this.id,\n      name: file.name,\n      type: file.type,\n      data: file,\n      meta: {\n        // path of the file relative to the ancestor directory the user selected.\n        // e.g. 'docs/Old Prague/airbnb.pdf'\n        relativePath: file.relativePath || null,\n      },\n    }))\n\n    try {\n      this.uppy.addFiles(descriptors)\n    } catch (err) {\n      this.uppy.log(err)\n    }\n  }\n\n  // ___Why make insides of Dashboard invisible until first ResizeObserver event is emitted?\n  //    ResizeOberserver doesn't emit the first resize event fast enough, users can see the jump from one .uppy-size-- to\n  //    another (e.g. in Safari)\n  // ___Why not apply visibility property to .uppy-Dashboard-inner?\n  //    Because ideally, acc to specs, ResizeObserver should see invisible elements as of width 0. So even though applying\n  //    invisibility to .uppy-Dashboard-inner works now, it may not work in the future.\n  startListeningToResize = () => {\n    // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\n    // and update containerWidth/containerHeight in plugin state accordingly.\n    // Emits first event on initialization.\n    this.resizeObserver = new ResizeObserver((entries) => {\n      const uppyDashboardInnerEl = entries[0]\n\n      const { width, height } = uppyDashboardInnerEl.contentRect\n\n      this.uppy.log(`[Dashboard] resized: ${width} / ${height}`, 'debug')\n\n      this.setPluginState({\n        containerWidth: width,\n        containerHeight: height,\n        areInsidesReadyToBeVisible: true,\n      })\n    })\n    this.resizeObserver.observe(this.el.querySelector('.uppy-Dashboard-inner'))\n\n    // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\n    this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\n      const pluginState = this.getPluginState()\n      const isModalAndClosed = !this.opts.inline && pluginState.isHidden\n      if (\n        // if ResizeObserver hasn't yet fired,\n        !pluginState.areInsidesReadyToBeVisible\n        // and it's not due to the modal being closed\n        && !isModalAndClosed\n      ) {\n        this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug')\n\n        this.setPluginState({\n          areInsidesReadyToBeVisible: true,\n        })\n      }\n    }, 1000)\n  }\n\n  stopListeningToResize = () => {\n    this.resizeObserver.disconnect()\n\n    clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout)\n  }\n\n  // Records whether we have been interacting with uppy right now,\n  // which is then used to determine whether state updates should trigger a refocusing.\n  recordIfFocusedOnUppyRecently = (event) => {\n    if (this.el.contains(event.target)) {\n      this.ifFocusedOnUppyRecently = true\n    } else {\n      this.ifFocusedOnUppyRecently = false\n      // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\n      //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\n      //    previously run superFocus sometimes hits and moves focus back to Uppy.\n      this.superFocus.cancel()\n    }\n  }\n\n  disableAllFocusableElements = (disable) => {\n    const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS))\n    if (disable) {\n      focusableNodes.forEach((node) => {\n        // save previous tabindex in a data-attribute, to restore when enabling\n        const currentTabIndex = node.getAttribute('tabindex')\n        if (currentTabIndex) {\n          node.dataset.inertTabindex = currentTabIndex\n        }\n        node.setAttribute('tabindex', '-1')\n      })\n    } else {\n      focusableNodes.forEach((node) => {\n        if ('inertTabindex' in node.dataset) {\n          node.setAttribute('tabindex', node.dataset.inertTabindex)\n        } else {\n          node.removeAttribute('tabindex')\n        }\n      })\n    }\n    this.dashboardIsDisabled = disable\n  }\n\n  updateBrowserHistory = () => {\n    // Ensure history state does not already contain our modal name to avoid double-pushing\n    // eslint-disable-next-line no-restricted-globals\n    if (!history.state?.[this.modalName]) {\n      // Push to history so that the page is not lost on browser back button press\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState({\n        // eslint-disable-next-line no-restricted-globals\n        ...history.state,\n        [this.modalName]: true,\n      }, '')\n    }\n\n    // Listen for back button presses\n    window.addEventListener('popstate', this.handlePopState, false)\n  }\n\n  handlePopState = (event) => {\n    // Close the modal if the history state no longer contains our modal name\n    if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\n      this.closeModal({ manualClose: false })\n    }\n\n    // When the browser back button is pressed and uppy is now the latest entry\n    // in the history but the modal is closed, fix the history by removing the\n    // uppy history entry.\n    // This occurs when another entry is added into the history state while the\n    // modal is open, and then the modal gets manually closed.\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\n    if (!this.isModalOpen() && event.state?.[this.modalName]) {\n      // eslint-disable-next-line no-restricted-globals\n      history.back()\n    }\n  }\n\n  handleKeyDownInModal = (event) => {\n    // close modal on esc key press\n    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)\n    // trap focus on tab key press\n    if (event.keyCode === TAB_KEY) trapFocus.forModal(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  handleClickOutside = () => {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste = (event) => {\n    // Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootPaste(event)\n        plugin.handleRootPaste?.(event)\n      }\n    })\n\n    // Add all dropped files\n    const files = toArray(event.clipboardData.files)\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files pasted')\n      this.addFiles(files)\n    }\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n    const files = toArray(event.target.files)\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files selected through input')\n      this.addFiles(files)\n    }\n  }\n\n  handleDragOver = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    // Check if some plugin can handle the datatransfer without files —\n    // for instance, the Url plugin can import a url\n    const canSomePluginHandleRootDrop = () => {\n      let somePluginCanHandleRootDrop = true\n      this.uppy.iteratePlugins((plugin) => {\n        if (plugin.canHandleRootDrop?.(event)) {\n          somePluginCanHandleRootDrop = true\n        }\n      })\n      return somePluginCanHandleRootDrop\n    }\n\n    // Check if the \"type\" of the datatransfer object includes files\n    const doesEventHaveFiles = () => {\n      const { types } = event.dataTransfer\n      return types.some(type => type === 'Files')\n    }\n\n    // Deny drop, if no plugins can handle datatransfer, there are no files,\n    // or when opts.disabled is set, or new uploads are not allowed\n    const somePluginCanHandleRootDrop = canSomePluginHandleRootDrop(event)\n    const hasFiles = doesEventHaveFiles(event)\n    if (\n      (!somePluginCanHandleRootDrop && !hasFiles)\n      || this.opts.disabled\n      // opts.disableLocalFiles should only be taken into account if no plugins\n      // can handle the datatransfer\n      || (this.opts.disableLocalFiles && (hasFiles || !somePluginCanHandleRootDrop))\n      || !this.uppy.getState().allowNewUpload\n    ) {\n      event.dataTransfer.dropEffect = 'none'\n      clearTimeout(this.removeDragOverClassTimeout)\n      return\n    }\n\n    // Add a small (+) icon on drop\n    // (and prevent browsers from interpreting this as files being _moved_ into the\n    // browser, https://github.com/transloadit/uppy/issues/1978).\n    event.dataTransfer.dropEffect = 'copy'\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    this.setPluginState({ isDraggingOver: true })\n\n    this.opts.onDragOver?.(event)\n  }\n\n  handleDragLeave = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    clearTimeout(this.removeDragOverClassTimeout)\n    // Timeout against flickering, this solution is taken from drag-drop library.\n    // Solution with 'pointer-events: none' didn't work across browsers.\n    this.removeDragOverClassTimeout = setTimeout(() => {\n      this.setPluginState({ isDraggingOver: false })\n    }, 50)\n\n    this.opts.onDragLeave?.(event)\n  }\n\n  handleDrop = async (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    clearTimeout(this.removeDragOverClassTimeout)\n\n    this.setPluginState({ isDraggingOver: false })\n\n    // Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin.type === 'acquirer') {\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\n        plugin.handleRootDrop?.(event)\n      }\n    })\n\n    // Add all dropped files\n    let executedDropErrorOnce = false\n    const logDropError = (error) => {\n      this.uppy.log(error, 'error')\n\n      // In practice all drop errors are most likely the same,\n      // so let's just show one to avoid overwhelming the user\n      if (!executedDropErrorOnce) {\n        this.uppy.info(error.message, 'error')\n        executedDropErrorOnce = true\n      }\n    }\n\n    // Add all dropped files\n    const files = await getDroppedFiles(event.dataTransfer, { logDropError })\n    if (files.length > 0) {\n      this.uppy.log('[Dashboard] Files dropped')\n      this.addFiles(files)\n    }\n\n    this.opts.onDrop?.(event)\n  }\n\n  handleRequestThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:request', file)\n    }\n  }\n\n  /**\n   * We cancel thumbnail requests when a file item component unmounts to avoid\n   * clogging up the queue when the user scrolls past many elements.\n   */\n  handleCancelThumbnail = (file) => {\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\n      this.uppy.emit('thumbnail:cancel', file)\n    }\n  }\n\n  handleKeyDownInInline = (event) => {\n    // Trap focus on tab key press.\n    if (event.keyCode === TAB_KEY) trapFocus.forInline(event, this.getPluginState().activeOverlayType, this.el)\n  }\n\n  // ___Why do we listen to the 'paste' event on a document instead of onPaste={props.handlePaste} prop,\n  //    or this.el.addEventListener('paste')?\n  //    Because (at least) Chrome doesn't handle paste if focus is on some button, e.g. 'My Device'.\n  //    => Therefore, the best option is to listen to all 'paste' events, and only react to them when we are focused on our\n  //       particular Uppy instance.\n  // ___Why do we still need onPaste={props.handlePaste} for the DashboardUi?\n  //    Because if we click on the 'Drop files here' caption e.g., `document.activeElement` will be 'body'. Which means our\n  //    standard determination of whether we're pasting into our Uppy instance won't work.\n  //    => Therefore, we need a traditional onPaste={props.handlePaste} handler too.\n  handlePasteOnBody = (event) => {\n    const isFocusInOverlay = this.el.contains(document.activeElement)\n    if (isFocusInOverlay) {\n      this.handlePaste(event)\n    }\n  }\n\n  handleComplete = ({ failed }) => {\n    if (this.opts.closeAfterFinish && failed.length === 0) {\n      // All uploads are done\n      this.requestCloseModal()\n    }\n  }\n\n  handleCancelRestore = () => {\n    this.uppy.emit('restore-canceled')\n  }\n\n  #openFileEditorWhenFilesAdded = (files) => {\n    const firstFile = files[0]\n    if (this.canEditFile(firstFile)) {\n      this.openFileEditor(firstFile)\n    }\n  }\n\n  initEvents = () => {\n    // Modal open button\n    if (this.opts.trigger && !this.opts.inline) {\n      const showModalTrigger = findAllDOMElements(this.opts.trigger)\n      if (showModalTrigger) {\n        showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n      } else {\n        this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning')\n      }\n    }\n\n    this.startListeningToResize()\n    document.addEventListener('paste', this.handlePasteOnBody)\n\n    this.uppy.on('plugin-remove', this.removeTarget)\n    this.uppy.on('file-added', this.hideAllPanels)\n    this.uppy.on('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.on('file-editor:complete', this.hideAllPanels)\n    this.uppy.on('complete', this.handleComplete)\n\n    // ___Why fire on capture?\n    //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\n    document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true)\n    document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true)\n\n    if (this.opts.inline) {\n      this.el.addEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.on('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  removeEvents = () => {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    this.stopListeningToResize()\n    document.removeEventListener('paste', this.handlePasteOnBody)\n\n    window.removeEventListener('popstate', this.handlePopState, false)\n    this.uppy.off('plugin-remove', this.removeTarget)\n    this.uppy.off('file-added', this.hideAllPanels)\n    this.uppy.off('dashboard:modal-closed', this.hideAllPanels)\n    this.uppy.off('file-editor:complete', this.hideAllPanels)\n    this.uppy.off('complete', this.handleComplete)\n\n    document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently)\n    document.removeEventListener('click', this.recordIfFocusedOnUppyRecently)\n\n    if (this.opts.inline) {\n      this.el.removeEventListener('keydown', this.handleKeyDownInInline)\n    }\n\n    if (this.opts.autoOpenFileEditor) {\n      this.uppy.off('files-added', this.#openFileEditorWhenFilesAdded)\n    }\n  }\n\n  superFocusOnEachUpdate = () => {\n    const isFocusInUppy = this.el.contains(document.activeElement)\n    // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\n    const isFocusNowhere = document.activeElement === document.body || document.activeElement === null\n    const isInformerHidden = this.uppy.getState().info.isHidden\n    const isModal = !this.opts.inline\n\n    if (\n      // If update is connected to showing the Informer - let the screen reader calmly read it.\n      isInformerHidden\n      && (\n        // If we are in a modal - always superfocus without concern for other elements\n        // on the page (user is unlikely to want to interact with the rest of the page)\n        isModal\n        // If we are already inside of Uppy, or\n        || isFocusInUppy\n        // If we are not focused on anything BUT we have already, at least once, focused on uppy\n        //   1. We focus when isFocusNowhere, because when the element we were focused\n        //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\n        //      something somewhere else on the page, - focus won't be 'nowhere'.\n        //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\n        //      to avoid focus jumps if we do something else on the page.\n        //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\n        //                     when file is uploading, - navigate via tab to the checkbox,\n        //                     try to press space multiple times. Focus will jump to Uppy.\n        || (isFocusNowhere && this.ifFocusedOnUppyRecently)\n      )\n    ) {\n      this.superFocus(this.el, this.getPluginState().activeOverlayType)\n    } else {\n      this.superFocus.cancel()\n    }\n  }\n\n  afterUpdate = () => {\n    if (this.opts.disabled && !this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(true)\n      return\n    }\n\n    if (!this.opts.disabled && this.dashboardIsDisabled) {\n      this.disableAllFocusableElements(false)\n    }\n\n    this.superFocusOnEachUpdate()\n  }\n\n  saveFileCard = (meta, fileID) => {\n    this.uppy.setFileMeta(fileID, meta)\n    this.toggleFileCard(false, fileID)\n  }\n\n  #attachRenderFunctionToTarget = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    return {\n      ...target,\n      icon: plugin.icon || this.opts.defaultPickerIcon,\n      render: plugin.render,\n    }\n  }\n\n  #isTargetSupported = (target) => {\n    const plugin = this.uppy.getPlugin(target.id)\n    // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n    if (typeof plugin.isSupported !== 'function') {\n      return true\n    }\n    return plugin.isSupported()\n  }\n\n  #getAcquirers = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'acquirer' && this.#isTargetSupported(target))\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getProgressIndicators = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'progressindicator')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  #getEditors = memoize((targets) => {\n    return targets\n      .filter(target => target.type === 'editor')\n      .map(this.#attachRenderFunctionToTarget)\n  })\n\n  render = (state) => {\n    const pluginState = this.getPluginState()\n    const { files, capabilities, allowNewUpload } = state\n    const {\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n    } = this.uppy.getObjectOfFilesPerState()\n\n    const acquirers = this.#getAcquirers(pluginState.targets)\n    const progressindicators = this.#getProgressIndicators(pluginState.targets)\n    const editors = this.#getEditors(pluginState.targets)\n\n    let theme\n    if (this.opts.theme === 'auto') {\n      theme = capabilities.darkMode ? 'dark' : 'light'\n    } else {\n      theme = this.opts.theme\n    }\n\n    if (['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) < 0) {\n      this.opts.fileManagerSelectionType = 'files'\n      // eslint-disable-next-line no-console\n      console.warn(`Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`)\n    }\n\n    return DashboardUI({\n      state,\n      isHidden: pluginState.isHidden,\n      files,\n      newFiles,\n      uploadStartedFiles,\n      completeFiles,\n      erroredFiles,\n      inProgressFiles,\n      inProgressNotPausedFiles,\n      processingFiles,\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      allowNewUpload,\n      acquirers,\n      theme,\n      disabled: this.opts.disabled,\n      disableLocalFiles: this.opts.disableLocalFiles,\n      direction: this.opts.direction,\n      activePickerPanel: pluginState.activePickerPanel,\n      showFileEditor: pluginState.showFileEditor,\n      saveFileEditor: this.saveFileEditor,\n      disableAllFocusableElements: this.disableAllFocusableElements,\n      animateOpenClose: this.opts.animateOpenClose,\n      isClosing: pluginState.isClosing,\n      progressindicators,\n      editors,\n      autoProceed: this.uppy.opts.autoProceed,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      i18n: this.i18n,\n      i18nArray: this.i18nArray,\n      uppy: this.uppy,\n      note: this.opts.note,\n      recoveredState: state.recoveredState,\n      metaFields: pluginState.metaFields,\n      resumableUploads: capabilities.resumableUploads || false,\n      individualCancellation: capabilities.individualCancellation,\n      isMobileDevice: capabilities.isMobileDevice,\n      fileCardFor: pluginState.fileCardFor,\n      toggleFileCard: this.toggleFileCard,\n      toggleAddFilesPanel: this.toggleAddFilesPanel,\n      showAddFilesPanel: pluginState.showAddFilesPanel,\n      saveFileCard: this.saveFileCard,\n      openFileEditor: this.openFileEditor,\n      canEditFile: this.canEditFile,\n      width: this.opts.width,\n      height: this.opts.height,\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\n      fileManagerSelectionType: this.opts.fileManagerSelectionType,\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\n      hideCancelButton: this.opts.hideCancelButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\n      showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\n      containerWidth: pluginState.containerWidth,\n      containerHeight: pluginState.containerHeight,\n      areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\n      isTargetDOMEl: this.isTargetDOMEl,\n      parentElement: this.el,\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\n      requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\n      showSelectedFiles: this.opts.showSelectedFiles,\n      handleCancelRestore: this.handleCancelRestore,\n      handleRequestThumbnail: this.handleRequestThumbnail,\n      handleCancelThumbnail: this.handleCancelThumbnail,\n      // drag props\n      isDraggingOver: pluginState.isDraggingOver,\n      handleDragOver: this.handleDragOver,\n      handleDragLeave: this.handleDragLeave,\n      handleDrop: this.handleDrop,\n    })\n  }\n\n  discoverProviderPlugins = () => {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  onMount () {\n    // Set the text direction if the page has not defined one.\n    const element = this.el\n    const direction = getTextDirection(element)\n    if (!direction) {\n      element.dir = 'ltr'\n    }\n  }\n\n  install = () => {\n    // Set default state for Dashboard\n    this.setPluginState({\n      isHidden: true,\n      fileCardFor: null,\n      activeOverlayType: null,\n      showAddFilesPanel: false,\n      activePickerPanel: false,\n      showFileEditor: false,\n      metaFields: this.opts.metaFields,\n      targets: [],\n      // We'll make them visible once .containerWidth is determined\n      areInsidesReadyToBeVisible: false,\n      isDraggingOver: false,\n    })\n\n    const { inline, closeAfterFinish } = this.opts\n    if (inline && closeAfterFinish) {\n      throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.')\n    }\n\n    const { allowMultipleUploads, allowMultipleUploadBatches } = this.uppy.opts\n    if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\n      this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning')\n    }\n\n    const { target } = this.opts\n\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) {\n        plugin.mount(this, plugin)\n      }\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        id: `${this.id}:StatusBar`,\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideRetryButton: this.opts.hideRetryButton,\n        hidePauseResumeButton: this.opts.hidePauseResumeButton,\n        hideCancelButton: this.opts.hideCancelButton,\n        showProgressDetails: this.opts.showProgressDetails,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale,\n        doneButtonHandler: this.opts.doneButtonHandler,\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        id: `${this.id}:Informer`,\n        target: this,\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        id: `${this.id}:ThumbnailGenerator`,\n        thumbnailWidth: this.opts.thumbnailWidth,\n        thumbnailType: this.opts.thumbnailType,\n        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,\n        // If we don't block on thumbnails, we can lazily generate them\n        lazy: !this.opts.waitForThumbnailsBeforeUpload,\n      })\n    }\n\n    // Dark Mode / theme\n    this.darkModeMediaQuery = (typeof window !== 'undefined' && window.matchMedia)\n      ? window.matchMedia('(prefers-color-scheme: dark)')\n      : null\n\n    const isDarkModeOnFromTheStart = this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`)\n    this.setDarkModeCapability(isDarkModeOnFromTheStart)\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.addListener(this.handleSystemDarkModeChange)\n    }\n\n    this.discoverProviderPlugins()\n    this.initEvents()\n  }\n\n  uninstall = () => {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    if (this.opts.theme === 'auto') {\n      this.darkModeMediaQuery.removeListener(this.handleSystemDarkModeChange)\n    }\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}